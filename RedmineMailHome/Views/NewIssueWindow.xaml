<Window x:Class="RedmineMail.Views.NewIssueWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:RedmineMail.Views"
        xmlns:vm="clr-namespace:RedmineMail.ViewModels"
        Title="NewTicketWindow" Height="178.267" Width="525"
        ResizeMode="NoResize">

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger MessageKey="Close" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid Height="146" VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="345*"/>
            <ColumnDefinition Width="172*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="label_Copy4" Content="トラッカー" HorizontalAlignment="Left" Margin="10,8,0,0" VerticalAlignment="Top" Width="89" Height="28" RenderTransformOrigin="1.541,4.831"/>
        <Label x:Name="label_Copy9" Content="{Binding Tracker}" HorizontalAlignment="Left" Margin="99,8,0,0" VerticalAlignment="Top" Width="408" Height="28" Grid.ColumnSpan="2"/>

        <Label x:Name="label_Copy5" Content="優先度" HorizontalAlignment="Left" Margin="10,36,0,0" VerticalAlignment="Top" Width="89" Height="28" RenderTransformOrigin="1.541,4.831"/>
        <ComboBox x:Name="comboBox_Priority" HorizontalAlignment="Left" Margin="99,36,0,0" VerticalAlignment="Top" Width="120"
                  ItemsSource="{Binding PriorityList}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedPriority, Mode=TwoWay}" Text="Select Option"/>

        <Label x:Name="label_Copy7" Content="担当者" HorizontalAlignment="Left" Margin="10,58,0,0" VerticalAlignment="Top" Width="89" Height="28" RenderTransformOrigin="1.541,4.831"/>
        <ComboBox x:Name="comboBox_AssignedTo" HorizontalAlignment="Left" Margin="99,58,0,0" VerticalAlignment="Top" Width="120"
            ItemsSource="{Binding UserList}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedUser, Mode=TwoWay}" Text="Select Option">
        </ComboBox>
        <Label x:Name="label_Copy12" Content="期限" HorizontalAlignment="Left" Margin="10,80,0,0" VerticalAlignment="Top" Width="89" Height="28" RenderTransformOrigin="1.541,4.831"/>
        <DatePicker HorizontalAlignment="Left" Margin="99,80,0,0" VerticalAlignment="Top" SelectedDate="{Binding DueDate}"/>

        <Button x:Name="button" Content="作成" HorizontalAlignment="Left" Margin="57,102,0,0" VerticalAlignment="Top" Width="70" Command="{Binding NewIssueCommand}" Grid.Column="1"/>

    </Grid>
</Window>
